spring.datasource.url=jdbc:mysql://mysql:3306/notification_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true


# Kafka Bootstrap Server
spring.kafka.bootstrap-servers=kafka:29092


# Kafka Consumer Configuration
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# ? IMPORTANT : Mapping des types
spring.kafka.consumer.properties.spring.json.type.mapping=\
  ma.ensa.book_ms.events.BookCreatedEvent:ma.ensa.notification_ms.Events.BookCreatedEvent,\
  ma.ensa.borrower_ms.events.BookBorrowedEvent:ma.ensa.notification_ms.Events.BookBorrowedEvent,\
  ma.ensa.borrower_ms.events.BookReturnedEvent:ma.ensa.notification_ms.Events.BookReturnedEvent,\
  ma.ensa.borrower_ms.events.BookStockOverEvent:ma.ensa.notification_ms.Events.BookStockOverEvent

# Accepter tous les packages (sécurité)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Gestion des commits
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual_immediate

# --- Eureka Client Configuration ---
eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/